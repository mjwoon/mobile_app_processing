/* autogenerated by Processing revision 1293 on 2024-12-05 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import controlP5.*;
import controlP5.*;
import controlP5.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class mainWidget extends PApplet {




ControlP5 cp5;

ArrayList<Widget> widgets = new ArrayList<Widget>();

int scrollY = 0; // 스크롤을 위한 변수
boolean isDragging = false; // 드래그 중인지 여부 확인
float pos, npos;  // pos는 부드러운 스크롤을 위한 위치, npos는 목표 스크롤 위치

PImage ArrowImage; // 화살표 이미지


GamjaWidget gamjaWidget;
MusicWidget musicWidget;
BookWidget bookWidget;
BatteryWidget batteryWidget;


public void setup() {
    /* size commented out by preprocessor */;
    background(255);

    ArrowImage = loadImage("Arrow.png");

    cp5 = new ControlP5(this);  // ControlP5 초기화

    gamjaWidget = new GamjaWidget(26, 822 + scrollY, 368, 224, color(200, 200, 255));
    musicWidget = new MusicWidget(214,1064 + scrollY, 176, 104, color(220,220,220));
    bookWidget = new BookWidget(26, 16 + scrollY, 380, 224, color(255,220,220));
    batteryWidget = new BatteryWidget(22, 281 + scrollY, 368,90, color(255));

    widgets.add(gamjaWidget);
    widgets.add(musicWidget);
    widgets.add(bookWidget);
    widgets.add(batteryWidget);

    cp5.addButton("ArrowBtn")
     .setPosition(376,934 + scrollY)
     .setImage(ArrowImage)
     .setSize(7,12)
     .setId(1)
     .updateSize();
}

public void draw(){
    background(255);

    npos = constrain(npos, -1415, 0);  // 스크롤 제한: 화면을 넘어가지 않도록
    pos += (npos - pos) * 0.1f;  // 부드러운 스크롤 효과

    pushMatrix();
    translate(0, PApplet.parseInt(pos));

    // 각 위젯의 display() 호출
    for (Widget widget : widgets) {
        widget.display();
    }
    popMatrix();

    cp5.draw();

}


// 마우스 클릭 시 드래그 시작
public void mousePressed() {
  isDragging = true;  // 마우스를 클릭하면 드래그 시작
}

// 마우스 드래그 시 스크롤 이동
public void mouseDragged(MouseEvent event) {
  if (isDragging) {
    npos += (mouseY - pmouseY) * 1.5f;  // 드래그한 만큼 스크롤 위치 변경
  }
}

// 마우스 클릭 해제 시 드래그 종료
public void mouseReleased() {
  isDragging = false;  // 드래그 종료
}
class BatteryWidget extends Widget{
    PImage batteryImage; // 감자 이미지를 저장할 변수

    BatteryWidget(float x, float y, float width, float height, int bgColor) {
        super(x, y, width, height, bgColor);

        batteryImage = loadImage("battery.png");

    }


    @Override public 
    void display() {
        fill(255, 204, 0);  // GamjaWidget만의 고유한 색상
        rect(x, y, width, height);

        image(batteryImage, x, y, width, height);

    }
}
class BookWidget extends Widget{
    PImage bookImage; // 감자 이미지를 저장할 변수

    BookWidget(float x, float y, float width, float height, int bgColor) {
        super(x, y, width, height, bgColor);

        bookImage = loadImage("book.png");

    }


    @Override public 
    void display() {
        fill(255, 204, 0);  // GamjaWidget만의 고유한 색상
        rect(x, y, width, height);

        image(bookImage, x, y, width, height);

    }
}



class GamjaWidget extends Widget{
  PImage gamjaImage; // 감자 이미지를 저장할 변수

  GamjaWidget(float x, float y, float width, float height, int bgColor) {
    super(x, y, width, height, bgColor);

    gamjaImage = loadImage("gamja.png");

  }

  
  @Override public 
  void display() {
    fill(255, 204, 0);  // GamjaWidget만의 고유한 색상
    rect(x, y, width, height);

    image(gamjaImage,x+100,y+30, 166, 154);

  }
}




class MusicWidget extends Widget{

  PImage MusicImage; // 노래 이미지를 저장할 변수

  MusicWidget(float x, float y, float width, float height, int bgColor) {
    super(x, y, width, height, bgColor);
    MusicImage = loadImage("widget_music.png");
  }
  

  @Override public 
  void display() {
    fill(255, 204, 0);  // MusicWidget만의 고유한 색상
    rect(x, y, width, height);
    fill(0);

    image(MusicImage, x, y, width - 10, height - 10);
  }

  
}
class Widget {
  float x, y, width, height;
  int bgColor;


  Widget(float x, float y, float width, float height, int bgColor) {
    this.x = x;
    this.y = y;
    this.width = width;
    this.height = height;
    this.bgColor = bgColor;    
  }


  public void display() {
    fill(bgColor);
    rect(x, y, width, height);
    fill(0);
  }
}


  public void settings() { size(412, 1415); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "mainWidget" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
